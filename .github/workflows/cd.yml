name: CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE: ghcr.io/${{ github.repository }}
  TAG: ${{ github.sha }}
  LATEST: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # 讓 GITHUB_TOKEN 可以 push 到 GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR (GITHUB_TOKEN)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: docker build -t $IMAGE:$TAG -t $IMAGE:$LATEST .

      - name: Push image
        run: |
          docker push $IMAGE:$TAG
          docker push $IMAGE:$LATEST

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (get Caddyfile & compose)
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Trust host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Prepare /opt/app on EC2
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /opt/app"

      - name: Copy deploy files
        run: scp docker-compose.yml Caddyfile ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/app/

      - name: Deploy on EC2
        run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            GHCR_USER='${{ secrets.GHCR_USER }}' GHCR_TOKEN='${{ secrets.GHCR_TOKEN }}' bash -lc '
                set -e
                cd /opt/app
                docker login ghcr.io -u \"$GHCR_USER\" -p \"$GHCR_TOKEN\" || true
                docker compose pull || docker-compose pull
                docker compose up -d || docker-compose up -d
                sleep 2
                curl -fsS http://localhost/healthz >/dev/null && echo healthy || (docker logs --tail=200 app; exit 1)
            '
            "

